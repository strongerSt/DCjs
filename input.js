// 加密脚本 - 自动解密执行
// 原始脚本已加密保护

// 解密并执行模块
function run() {
  // 密钥和加密内容
  const key = "ScriptableKey88";
  const encoded = "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";
  
  // 解密函数
  function decrypt(encoded, key) {
    // 从Base64解码
    const bData = Data.fromBase64String(encoded);
    const text = bData.toRawString();
    
    // 异或解密
    let result = "";
    for (let i = 0; i < text.length; i++) {
      const charCode = text.charCodeAt(i) ^ key.charCodeAt(i % key.length);
      result += String.fromCharCode(charCode);
    }
    return result;
  }
  
  // 解密并执行
  try {
    const script = decrypt(encoded, key);
    eval(script);
  } catch(e) {
    console.error("执行错误: " + e);
    if (typeof $done === 'function') $done({});
  }
}

// 运行脚本
run();